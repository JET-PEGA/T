package sfis.raspberrypi.piclient.agent.service.proxy;

/**
 * 請求器的簡單工廠
 */
public class RequesterFactory {
    public static Requester createRequester(String uri, RequestBody requestBody, MethodType method) {
        Requester requester = null;
        requestBody.setMethod(method.getMethod());
        switch (method) {
            // 取得對應DB
            case ToolsQApi_SysApp_GetSoaAppDb:
                requester = new SoaAppDbRequester(uri, requestBody);
                break;

            // 取得Proxy 服務位置
            case ToolsQApi_SysApp_QueryAppUrl:
                requester = new QueryAppUrlRequester(uri, requestBody);
                break;

            //取得 Resource
            case ToolsQApi_ApiConfig_QueryQConfig:
                requester = new ResourceRequester(uri, requestBody);
                break;

            case PKG_CT_GET_APP_CLIENT_CFG:
                requester = new ClientConfigRequester(uri, requestBody);
                break;

            case PKG_ESOP_JSON_GET_DEVICE:
                requester = new DeviceInfoRequester(uri, requestBody);
                break;

            case PKG_SYS_GET_BASE_APP_CFG:
                requester = new BaseConfigRequester(uri, requestBody);
                break;

            case PKG_CT_UPD_DEV_MACID:
                requester = new UpdateDeviceRequester(uri, requestBody);
                break;

            case PKG_ESOP_JSON_CENTRIC:
                requester = new CallCentricRequester(uri, requestBody);
                break;

            default:
                break;
        }
        return requester;
    }
}


package sfis.raspberrypi.piclient.agent.service.proxy;

import com.fasterxml.jackson.databind.JsonNode;

import java.util.Hashtable;

public class SoaAppDbRequester extends Requester {

    /**
     * 建構子
     *
     * @param uri         服務位置
     * @param requestBody 請求本文
     */
    public SoaAppDbRequester(String uri, RequestBody requestBody) {
        super(uri, requestBody);
    }

    /**
     * 檢查請求參數，是否符合規範
     *
     * @param parameters
     */
    @Override
    public void checkRequest(Hashtable parameters) {


    }

    /**
     * 建立回傳結果
     *
     * @param node
     */
    @Override
    public ResponseBody createResponse(JsonNode result) {

        ResponseBody responseBody = new ResponseBody(result);
        String sfisDb = result.at("/P_Dtl/RETURN1/INFO/sfisDb").asText("");
        responseBody.put("sfisDb", sfisDb);
        return responseBody;
    }
}


package sfis.raspberrypi.piclient.agent.service.proxy;

public enum MethodType {
    /**
     * 取得對應DB
     */
    ToolsQApi_SysApp_GetSoaAppDb {
        public String getMethod() {
            return "ToolsQApi-SysApp-GetSoaAppDb";
        }
    },

    /**
     * 取得Proxy 服務位置
     */
    ToolsQApi_SysApp_QueryAppUrl {
        public String getMethod() {
            return "ToolsQApi-SysApp-QueryAppUrl";
        }
    },

    /**
     *
     */
    ToolsQApi_ApiConfig_QueryQConfig {
        public String getMethod() {
            return "ToolsQApi-ApiConfig-QueryQConfig";
        }
    },

    /**
     *
     */
    PKG_CT_GET_APP_CLIENT_CFG {
        public String getMethod() {
            return "PKG_CT.GET_APP_CLIENT_CFG";
        }
    },

    /**
     *
     */
    PKG_ESOP_JSON_GET_DEVICE {
        public String getMethod() {
            return "PKG_ESOP_JSON.GET_DEVICE";
        }
    },

    /**
     *
     */
    PKG_SYS_GET_BASE_APP_CFG {
        public String getMethod() {
            return "PKG_SYS.GET_BASE_APP_CFG";
        }
    },



    /**
     *
     */
    PKG_CT_UPD_DEV_MACID {
        public String getMethod() {
            return "PKG_CT.UPD_DEV_MACID";
        }
    },

    /**
     *
     */
    PKG_ESOP_JSON_CENTRIC {
        public String getMethod() {
            return "PKG_ESOP_JSON.CENTRIC";
        }
    };

    public abstract String getMethod();
}



package sfis.raspberrypi.piclient.agent.service.proxy;

import com.fasterxml.jackson.databind.JsonNode;

import java.util.Hashtable;

public class SoaAppDbRequester extends Requester {

    /**
     * 建構子
     *
     * @param uri         服務位置
     * @param requestBody 請求本文
     */
    public SoaAppDbRequester(String uri, RequestBody requestBody) {
        super(uri, requestBody);
    }

    /**
     * 檢查請求參數，是否符合規範
     *
     * @param parameters
     */
    @Override
    public void checkRequest(Hashtable parameters) {


    }

    /**
     * 建立回傳結果
     *
     * @param node
     */
    @Override
    public ResponseBody createResponse(JsonNode result) {

        ResponseBody responseBody = new ResponseBody(result);
        String sfisDb = result.at("/P_Dtl/RETURN1/INFO/sfisDb").asText("");
        responseBody.put("sfisDb", sfisDb);
        return responseBody;
    }
}


package sfis.raspberrypi.piclient.agent.service.proxy;

import com.fasterxml.jackson.databind.JsonNode;

import java.util.Hashtable;

/**
 * 呼叫Proxy 的回應主體類別
 */
public class ResponseBody {

    /**
     * pRet
     */
    private int pRet;

    /**
     * 取得 pRet
     * @return
     */
    public int getP_Ret() {
        return pRet;
    }

    /**
     * 設定 pRet
     * @param ret
     */
    public void setP_Ret(int pRet) {
        this.pRet = pRet;
    }

    /**
     * pMsg
     */
    private String pMsg;

    /**
     * 取得 pMsg
     * @return
     */
    public String getP_Msg() {
        return pMsg;
    }

    /**
     * 設定 pMsg
     * @param msg
     */
    public void setP_Msg(String pMsg) {
        this.pMsg = pMsg;
    }

    /**
     * pSid
     */
    private String pSid;

    /**
     * 取得 pSid
     * @return
     */
    public String getP_Sid() {
        return pSid;
    }

    /**
     * 設定 pSid
     * @param sid
     */
    public void setP_Sid(String pSid) {
        this.pSid = pSid;
    }


    /**
     * 回傳結果字典
     */
    private Hashtable<String, Object> resultDict = new Hashtable<String, Object>();

    JsonNode body = null;

    /**
     * 建構子
     */
    public ResponseBody() {

    }

    /**
     * 建構子
     *
     * @param body
     */
    public ResponseBody(JsonNode body) {
        this.body = body;
    }

//    /**
//     * @param body
//     */
//    public void setBody(JsonNode body) {
//        this.body = body;
//    }

    /**
     * 將資料, 推入結果字典
     *
     * @param key
     * @param value
     */
    public void put(String key, Object value) {
        resultDict.put(key, value);
    }

    /**
     * 指定 key 取得字串值
     *
     * @param key
     * @return
     */
    public String getString(String key) {
        return String.valueOf(resultDict.get(key));
    }



    /**
     * 指定 key 取得整數值
     *
     * @param key
     * @return
     */
    public int getInt(String key) {
        return Integer.parseInt(resultDict.get(key).toString());
    }

    /**
     * 指定 key 取得字串值
     *
     * @param key
     * @return
     */
    public String getJson(String key) {
        return resultDict.get(key).toString();
    }

    /**
     * 指定 結果字典
     *
     * @param key
     * @return
     */
    public Hashtable<String, Object> getResultDict() {
        return resultDict;
    }

    public String toJson() {
        return this.body.toPrettyString();
    }

    /**
     * @return
     */
    @Override
    public String toString() {
        return this.body.toPrettyString();
    }

}

